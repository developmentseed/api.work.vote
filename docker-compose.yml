version: '2'

services:
  base_django_setup: &base_django_setup
    image: developmentseed/api.work.vote:latest
    entrypoint: ./bin/entrypoint.sh
    environment:
      DATABASE_URL: postgres://test:test@db/test
      HISTFILE: /root/hist/.bash_history
    volumes:
      - '.:/home/fec/api'
      - bashhistory:/root/hist
    depends_on:
      - db
    links:
      - db

  base:
    build:
      context: .
      dockerfile: Dockerfile.local 
    image: developmentseed/api.work.vote:latest

  serve:
    <<: *base_django_setup
    ports:
      - 8000:8000
    command: python manage.py runserver 0.0.0.0:8000 --noreload



  prod:
    image: developmentseed/api.work.vote:latest
    volumes:
      - '.:/home/fec/api'
    environment:
      PORT: 5000
    ports:
      - 8000:5000
    # env_file:
     # - config.txt

  bash:
    <<: *base_django_setup
    command: /bin/bash
  
  restore:
    <<: *base_django_setup
    command: pg_restore --no-acl --no-owner --clean --host db --username test --dbname test backup.sql

  shell:
    <<: *base_django_setup
    command: python manage.py shell

  collectstatic:
    <<: *base_django_setup
    command: python manage.py collectstatic --noinput -l

  createsuperuser:
    <<: *base_django_setup
    command: python manage.py createsuperuser

  export:
    <<: *base_django_setup
    command: python manage.py export

  import:
    <<: *base_django_setup
    command: python manage.py import

  migrate:
    <<: *base_django_setup
    command: python manage.py migrate

  makemigrations:
    <<: *base_django_setup
    command: python manage.py makemigrations
  
  boundaries:
    <<: *base_django_setup
    command: python manage.py boundaries

  rasterize:
    <<: *base_django_setup
    command: python manage.py rasterize
  
  add_to_db:
    <<: *base_django_setup
    command: python manage.py add_to_db
  
  check:
    <<: *base_django_setup
    command: python manage.py add_to_db

  showmigrations:
    <<: *base_django_setup
    command: python manage.py showmigrations

  db:
    image: mdillon/postgis:9.6-alpine
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: test
    ports:
      - 5432:5432
    volumes:
      - './.tmp/pg:/var/lib/postgresql/data'

volumes:
  bashhistory:
